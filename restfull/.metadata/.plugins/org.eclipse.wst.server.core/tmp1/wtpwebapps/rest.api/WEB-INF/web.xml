<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_9" version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee
  http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
	<display-name>rest-api</display-name>

	<servlet>
		<servlet-name>rest</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- load-on-startup means that the servlet will be loaded straight away, 
			rather than waiting for the first request. In our case, there is only one 
			servlet, so we might as well load it straight away. -->
		<load-on-startup>1</load-on-startup>
		<!-- The rest-servlet.xml class is loaded automatically, because Spring 
			will search for a file named <servlet-name>-servlet.xml in the WEB-INF directory. -->

	</servlet>

	<servlet-mapping>
		<servlet-name>rest</servlet-name>
		<url-pattern>
			/*
		</url-pattern>
	</servlet-mapping>

	<!-- Bootstrap listener to start up and shut down Spring's root WebApplicationContext. Delegates to ContextLoader. -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/applicationContext.xml
		</param-value>
	</context-param>

	<!-- Spring Security -->
	<!-- Adding these filters activates Spring security. -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

</web-app>
