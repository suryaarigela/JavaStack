Section- Class loader

1)What is Java ClassLoader?

We know that Java Program runs on Java Virtual Machine (JVM). When we compile a Java Class, it transforms it in the form of bytecode that is platform and machine independent compiled program and store it as a .class file. After that when we try to use a Class, Java ClassLoader loads that class into memory.

2)There are three types of built-in ClassLoader in Java:

 A)BOOTSTRAP CLASS LOADER (Prio 1)– It loads JDK internal classes, typically loads rt.jar and other core classes for example java.lang.* package classes
 
 B)EXTENSIONS CLASS LOADER (Prio 2)– It loads classes from the JDK extensions directory, usually $JAVA_HOME/lib/ext directory.

 C)SYSTEM CLASS LOADER (Prio 3)– It loads classes from the current classpath that can be set while invoking a program using -cp or -classpath command line options.
 
 
 *****Java ClassLoader are hierarchical and whenever a request is raised to load a class, it delegates it to its parent and in this way uniqueness is maintained in the runtime environment. If the parent class loader doesn’t find the class then the class loader itself tries to load the class.